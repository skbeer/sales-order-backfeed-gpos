<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="DataSummary">
    <typeAlias alias="dataSummaryInfo"
               type="com.monsanto.irdsoapservices.salesorder.domain.DataSummaryInfo" />
    <typeAlias alias="dataSummaryTotals"
               type="com.monsanto.irdsoapservices.salesorder.domain.DataSummaryTotals" />

    <resultMap id="dataSummaryResult" class="dataSummaryInfo">
        <result property="totalInvoices" column="Total_Invoices" />
        <result property="totalLineItems" column="Total_Line_Items" />
        <result property="totalDealers" column="Total_Dealers" />
        <result property="totalGrowers" column="Total_Growers" />
        <result property="totalEquivalentQuantity" column="Total_Equivalent_Qty" />
    </resultMap>

    <resultMap id="dataSummaryTotalsResult" class="dataSummaryTotals">
        <result property="totalOpenInvoices" column="Total_Open_Invoices" />
        <result property="totalDailyOpenInvoices" column="Total_Daily_Open_Invoices" />
    </resultMap>

    <select id="getDataSummaryDirect" resultMap="dataSummaryResult" parameterClass="java.util.Map">
        SELECT count( distinct rptd_doc_nbr) "Total_Invoices",
        count (detail_seq_nbr) "Total_Line_Items",
        count(distinct dealer_acct_id) "Total_Dealers",
        count (distinct grower_acct_id) "Total_Growers",
        sum(equivalent_qty) "Total_Equivalent_Qty"
        from (
        select rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        SUM (sales_qty) sales_qty,
        sales_uom,
        SUM (equivalent_qty) equivalent_qty,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched
        FROM (
        SELECT distinct h.rptd_doc_nbr,
        h.tran_id,
        d.detail_seq_nbr,
        'NS' sales_order_type_code,
        ts.source data_source,
        dd.day_date invc_date,
        substr(dd.mkt_yr, 1,4)   fiscal_year,
        cad.name_1 dealer_name,
        cad.ic_code dealer_ebid,
        cad.acct_id  dealer_acct_id,
        cad.shipping_addr_line_1 dealer_mailing_address,
        cad.shipping_city dealer_mailing_city,
        cad.shipping_state_code dealer_mailing_state,
        cad.shipping_zip_code dealer_mailing_zip_code,
        cad.shipping_county dealer_mailing_county,
        g.name_1 grower_name,
        gln_map.alias_id grower_gln,
        g.napd_id grower_napd_id,
        g.acct_id grower_acct_id,
        g.primary_contact_full_name grower_contact_name,
        g.mailing_addr_line_1 grower_mailing_address,
        g.mailing_city grower_mailing_city,
        g.mailing_state_code grower_mailing_state,
        g.mailing_zip_code grower_mailing_zip_code,
        g.mailing_county grower_mailing_county,
        spd.upc_code upc_code,
        spd.legal_descr_1 product_name,
        pps.upc_scc_code  gtin,
        <!--WO0000002039189 - Cancelled Transactions-->
        <!--d.ssu_qty     sales_qty,-->
        decode(hs.status_id,'5','0',d.ssu_qty) sales_qty,
        decode(pps.UOM_code, 'BN','BG',pps.UOM_code) sales_uom,
        decode(hs.status_id,'5','0',d.ssu_qty) equivalent_qty,
        'UN' equivilent_qty_uom,
        cad.name_1 salesrep_name,
        salesrep.name_1 || ' ' || salesrep.name_3 contact_name,
        salesrep.alias_ss_code salesrep_id,
        cad.mailing_addr_line_1 salesrep_address_1,
        cad.mailing_city salesrep_city,
        cad.mailing_state_code salesrep_state,
        cad.mailing_zip_code salesrep_zip,
        cad.mailing_county salesrep_county,
        decode (h.man_attn_flag, 'Y', 'N', 'Y') Touched_Untouched
        FROM ecg_tran_header h,
        ecg_tran_detail d,
        ecg_tran_party p_sf,
        ecg_tran_party p_st,
        ecg_tran_party p_ds,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        dm_active_grower_dim g,
        dm_active_channel_account_dim cad,
        s_acct_sales_area cgp,
        (select *
        from (select acct_id, system_type_code,
        alias_id, active_flag, rank, begin_date,
        max(begin_date) over (partition by acct_id, rank) max_date
        from s_acct_xref
        where system_type_code='GLN' and active_flag='Y' and rank=1
        )
        where begin_date = max_date
        )gln_map,
        dm_date_dim dd,
        s_seedco_salesrep salesrep,
        dm_seed_product_dim spd,
        s_prod_package_struct pps,
        dm_date_period_map dpm,
        biotech_translation bt
        WHERE h.tran_id = d.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_st.tran_id
        AND p_st.party_code = 'ST'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.ship_date = to_char(dd.day_date, 'yyyymmdd')
        AND exists (select 1
        from ecg_tran_header h1, ecg_tran_header_status hs1, ecg_tran_party tp1
        where h1.tran_id = hs1.tran_id
        and h1.tran_id = tp1.tran_id
        and tp1.party_code = 'SF'
        and hs1.status_code = 'SI'
        and hs1.status_id = 3
        and trunc(hs1.row_modify_date) > #startDate#
        and h1.rptd_doc_nbr = h.rptd_doc_nbr
        and tp1.acct_id = p_sf.acct_id)
        AND p_sf.acct_id = cad.acct_id
        AND cad.acct_id = cgp.acct_id
        AND d.prod_id = pps.prod_id
        AND d.prod_id = spd.product_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
        AND bt.dest_alias_id = #groupCode#
        AND bt.source_alias_type = 'CustGrp'
        AND hs.status_id = 3
        AND spd.OWNED_LICENSED_CODE = 'OWNED'
        AND hs.status_code = 'SI'
        AND dd.date_key = dpm.date_key
        AND to_number(LPAD (NVL (h.seedco_sales_rep_code,0),12,'0'))=
        TO_NUMBER (salesrep.seedco_salesrep_id(+))
        AND NVL (cgp.mfd_flag, 'N') != 'X'
        AND cgp.distribution_channel_code = '90'
        AND cgp.division_code = '17'
        AND cgp.sales_org_code = 'US20'
        AND p_st.acct_id = g.acct_id
        AND (ts.source in ('SRX', 'SRXH', 'SRXF', 'SEEDTRAK', 'KEYED' ) OR ts.source  = 'WS-XML' AND p_ds.acct_id != 168618)
        AND (RTRIM(g.napd_id) IS NOT NULL
        OR RTRIM(gln_map.alias_id) IS NOT NULL)
        AND g.acct_id = gln_map.acct_id(+)
        AND gln_map.system_type_code(+) = 'GLN'
        AND gln_map.rank(+) = 1
        AND gln_map.active_flag(+) = 'Y'
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 'WINTER CANOLA'
        ELSE 'MARKET YEAR'
        END = dpm.period_type
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 0
        WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) > 8
        THEN 1
        ELSE 0
        END = dpm.curr_period_offset
        )
        group by rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        sales_uom,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched)
    </select>

    <select id="getDataSummaryXML" resultMap="dataSummaryResult" parameterClass="java.util.Map">
        SELECT count( distinct rptd_doc_nbr) "Total_Invoices",
        count (detail_seq_nbr) "Total_Line_Items",
        count(distinct dealer_acct_id) "Total_Dealers",
        count (distinct grower_acct_id) "Total_Growers",
        sum(equivalent_qty) "Total_Equivalent_Qty"
        from (
        (select rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        SUM ( sales_qty) ,
        sales_uom,
        SUM (equivalent_qty) equivalent_qty,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched
        from (
        SELECT  distinct h.rptd_doc_nbr,
        h.tran_id,
        d.detail_seq_nbr,
        'NS' sales_order_type_code,
        ts.source data_source,
        h.rptd_doc_date invc_date,
        substr(dd.mkt_yr, 1,4)   fiscal_year,
        cad.name_1 dealer_name,
        cad.ic_code dealer_ebid,
        cad.acct_id  dealer_acct_id,
        cad.shipping_addr_line_1 dealer_mailing_address,
        cad.shipping_city dealer_mailing_city,
        cad.shipping_state_code dealer_mailing_state,
        cad.shipping_zip_code dealer_mailing_zip_code,
        cad.shipping_county dealer_mailing_county,
        g.name_1 grower_name,
        gln_map.alias_id grower_gln,
        g.napd_id grower_napd_id,
        g.acct_id grower_acct_id,
        g.primary_contact_full_name grower_contact_name,
        g.mailing_addr_line_1 grower_mailing_address,
        g.mailing_city grower_mailing_city,
        g.mailing_state_code grower_mailing_state,
        g.mailing_zip_code grower_mailing_zip_code,
        g.mailing_county grower_mailing_county,
        spd.upc_code upc_code,
        spd.legal_descr_1 product_name,
        pps.upc_scc_code  gtin,
        <!--WO0000002039189 - Cancelled Transactions-->
        <!--d.ssu_qty     sales_qty,-->
        decode(hs.status_id,'5','0',d.ssu_qty) sales_qty,
        decode(pps.UOM_code, 'BN','BG',pps.UOM_code) sales_uom,
        decode(hs.status_id,'5','0',d.ssu_qty) equivalent_qty,
        'UN' equivilent_qty_uom,
        cad.name_1 salesrep_name,
        salesrep.name_1 || ' ' || salesrep.name_3 contact_name,
        salesrep.alias_ss_code salesrep_id,
        cad.mailing_addr_line_1 salesrep_address_1,
        cad.mailing_city salesrep_city,
        cad.mailing_state_code salesrep_state,
        cad.mailing_zip_code salesrep_zip,
        cad.mailing_county salesrep_county,
        decode (h.man_attn_flag, 'Y', 'N', 'Y') Touched_Untouched
        FROM ecg_tran_header h,
        ecg_tran_detail d,
        ecg_tran_party p_sf,
        ecg_tran_party p_st,
        ecg_tran_party p_ds,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        dm_active_grower_dim g,
        dm_active_channel_account_dim cad,
        s_acct_sales_area cgp,
        (select *
        from (select acct_id, system_type_code,
        alias_id, active_flag, rank, begin_date,
        max(begin_date) over (partition by acct_id, rank) max_date
        from s_acct_xref
        where system_type_code='GLN' and active_flag='Y' and rank=1
        )
        where begin_date = max_date
        )gln_map,
        dm_date_dim dd,
        s_seedco_salesrep salesrep,
        dm_seed_product_dim spd,
        s_prod_package_struct pps,
        dm_date_period_map dpm,
        biotech_translation bt
        WHERE h.tran_id = d.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_st.tran_id
        AND p_st.party_code = 'ST'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.ship_date = to_char(dd.day_date, 'yyyymmdd')
        AND exists (select 1
        from ecg_tran_header h1, ecg_tran_header_status hs1, ecg_tran_party tp1
        where h1.tran_id = hs1.tran_id
        and h1.tran_id = tp1.tran_id
        and tp1.party_code = 'SF'
        and hs1.status_code = 'SI'
        and hs1.status_id = 3
        and  trunc(hs1.row_modify_date) > #startDate#
        and h1.rptd_doc_nbr = h.rptd_doc_nbr
        and tp1.acct_id = p_sf.acct_id)
        AND p_sf.acct_id = cad.acct_id
        AND cad.acct_id = cgp.acct_id
        AND d.prod_id = pps.prod_id
        AND d.prod_id = spd.product_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
        AND bt.dest_alias_id = #groupCode#
        AND bt.source_alias_type = 'CustGrp'
        AND hs.status_id = 3
        AND spd.OWNED_LICENSED_CODE = 'OWNED'
        AND hs.status_code = 'SI'
        AND dd.date_key = dpm.date_key
        AND to_number(LPAD (NVL (h.seedco_sales_rep_code,0),12,'0'))= TO_NUMBER (salesrep.seedco_salesrep_id(+))
        AND NVL (cgp.mfd_flag, 'N') != 'X'
        AND cgp.distribution_channel_code = '90'
        AND cgp.division_code = '17'
        AND cgp.sales_org_code = 'US20'
        AND p_st.acct_id = g.acct_id
        AND (ts.source = 'XML' AND p_ds.acct_id != 168618)
        AND (RTRIM(g.napd_id) IS NOT NULL
        OR RTRIM(gln_map.alias_id) IS NOT NULL)
        AND g.acct_id = gln_map.acct_id(+)
        AND gln_map.system_type_code(+) = 'GLN'
        AND gln_map.rank(+) = 1
        AND gln_map.active_flag(+) = 'Y'
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 'WINTER CANOLA'
        ELSE 'MARKET YEAR'
        END = dpm.period_type
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 0
        WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) > 8
        THEN 1
        ELSE 0
        END = dpm.curr_period_offset
        )
        group by rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        sales_uom,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched
        UNION ALL
        select rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        SUM (sales_qty) ,
        sales_uom,
        SUM (equivalent_qty) equivalent_qty,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched
        from (
        SELECT  distinct h.rptd_doc_nbr,
        h.tran_id,
        d.detail_seq_nbr,
        'NS' sales_order_type_code,
        ts.source data_source,
        h.rptd_doc_date invc_date,
        substr(dd.mkt_yr, 1,4)   fiscal_year,
        cad.name_1 dealer_name,
        cad.ic_code dealer_ebid,
        cad.acct_id  dealer_acct_id,
        cad.shipping_addr_line_1 dealer_mailing_address,
        cad.shipping_city dealer_mailing_city,
        cad.shipping_state_code dealer_mailing_state,
        cad.shipping_zip_code dealer_mailing_zip_code,
        cad.shipping_county dealer_mailing_county,
        g.name_1 grower_name,
        gln_map.alias_id grower_gln,
        g.napd_id grower_napd_id,
        g.acct_id grower_acct_id,
        g.primary_contact_full_name grower_contact_name,
        g.mailing_addr_line_1 grower_mailing_address,
        g.mailing_city grower_mailing_city,
        g.mailing_state_code grower_mailing_state,
        g.mailing_zip_code grower_mailing_zip_code,
        g.mailing_county grower_mailing_county,
        spd.upc_code upc_code,
        spd.legal_descr_1 product_name,
        pps.upc_scc_code  gtin,
        <!--WO0000002039189 - Cancelled Transactions-->
        <!--d.ssu_qty     sales_qty,-->
        decode(hs.status_id,'5','0',d.ssu_qty) sales_qty,
        decode(pps.UOM_code, 'BN','BG',pps.UOM_code) sales_uom,
        decode(hs.status_id,'5','0',d.ssu_qty) equivalent_qty,
        'UN' equivilent_qty_uom,
        cad.name_1 salesrep_name,
        salesrep.name_1 || ' ' || salesrep.name_3 contact_name,
        salesrep.alias_ss_code salesrep_id,
        cad.mailing_addr_line_1 salesrep_address_1,
        cad.mailing_city salesrep_city,
        cad.mailing_state_code salesrep_state,
        cad.mailing_zip_code salesrep_zip,
        cad.mailing_county salesrep_county,
        decode (h.man_attn_flag, 'Y', 'N', 'Y') Touched_Untouched
        FROM ecg_tran_header h,
        ecg_tran_detail d,
        ecg_tran_party p_sf,
        ecg_tran_party p_st,
        ecg_tran_party p_ds,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        dm_active_grower_dim g,
        dm_active_channel_account_dim cad,
        s_acct_sales_area cgp,
        (select *
        from (select acct_id, system_type_code,
        alias_id, active_flag, rank, begin_date,
        max(begin_date) over (partition by acct_id, rank) max_date
        from s_acct_xref
        where system_type_code='GLN' and active_flag='Y' and rank=1
        )
        where begin_date = max_date
        )gln_map,
        dm_date_dim dd,
        s_seedco_salesrep salesrep,
        dm_seed_product_dim spd,
        s_prod_package_struct pps,
        dm_date_period_map dpm
        WHERE h.tran_id = d.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_st.tran_id
        AND p_st.party_code = 'ST'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.ship_date = to_char(dd.day_date, 'yyyymmdd')
        AND exists (select 1
        from ecg_tran_header h1, ecg_tran_header_status hs1, ecg_tran_party tp1
        where h1.tran_id = hs1.tran_id
        and h1.tran_id = tp1.tran_id
        and tp1.party_code = 'SF'
        and hs1.status_code = 'SI'
        and hs1.status_id = 3
        and  trunc(hs1.row_modify_date) > #startDate#
        and h1.rptd_doc_nbr = h.rptd_doc_nbr
        and tp1.acct_id = p_sf.acct_id)
        AND p_sf.acct_id = cad.acct_id
        AND cad.acct_id = cgp.acct_id
        AND d.prod_id = pps.prod_id
        AND d.prod_id = spd.product_id
        AND hs.status_id = 3
        AND hs.status_code = 'SI'
        AND dd.date_key = dpm.date_key
        AND to_number(LPAD (NVL (h.seedco_sales_rep_code,0),12,'0'))=
        TO_NUMBER (salesrep.seedco_salesrep_id(+))
        AND p_st.acct_id = g.acct_id
        AND ( ts.source = 'XML' AND p_ds.acct_id = 168618 )
        AND (RTRIM(g.napd_id) IS NOT NULL
        OR RTRIM(gln_map.alias_id) IS NOT NULL)
        AND g.acct_id = gln_map.acct_id(+)
        AND gln_map.system_type_code(+) = 'GLN'
        AND gln_map.rank(+) = 1
        AND gln_map.active_flag(+) = 'Y'
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 'WINTER CANOLA'
        ELSE 'MARKET YEAR'
        END = dpm.period_type
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 0
        WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) > 8
        THEN 1
        ELSE 0
        END = dpm.curr_period_offset
        )
        group by rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        sales_uom,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched))
    </select>


    <select id="getDataSummaryAgrimine" resultMap="dataSummaryResult" parameterClass="java.util.Map">
        SELECT count( distinct rptd_doc_nbr) "Total_Invoices",
        count (detail_seq_nbr) "Total_Line_Items",
        count(distinct dealer_acct_id) "Total_Dealers",
        count (distinct grower_acct_id) "Total_Growers",
        sum(equivalent_qty) "Total_Equivalent_Qty"
        from (
        SELECT rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        SUM (sales_qty) sales_qty,
        sales_uom,
        SUM (equivalent_qty) equivalent_qty,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched
        FROM (
        SELECT distinct h.rptd_doc_nbr,
        h.tran_id,
        d.detail_seq_nbr,
        'NS' sales_order_type_code,
        ts.source data_source,
        dd.day_date invc_date,
        substr(dd.mkt_yr, 1,4)   fiscal_year,
        cad.name_1 dealer_name,
        cad.ic_code dealer_ebid,
        cad.acct_id  dealer_acct_id,
        cad.shipping_addr_line_1 dealer_mailing_address,
        cad.shipping_city dealer_mailing_city,
        cad.shipping_state_code dealer_mailing_state,
        cad.shipping_zip_code dealer_mailing_zip_code,
        cad.shipping_county dealer_mailing_county,
        g.name_1 grower_name,
        gln_map.alias_id grower_gln,
        g.napd_id grower_napd_id,
        g.acct_id grower_acct_id,
        g.primary_contact_full_name grower_contact_name,
        g.mailing_addr_line_1 grower_mailing_address,
        g.mailing_city grower_mailing_city,
        g.mailing_state_code grower_mailing_state,
        g.mailing_zip_code grower_mailing_zip_code,
        g.mailing_county grower_mailing_county,
        spd.upc_code upc_code,
        spd.legal_descr_1 product_name,
        pps.upc_scc_code  gtin,
        <!--WO0000002039189 - Cancelled Transactions-->
        <!--d.ssu_qty     sales_qty,-->
        decode(hs.status_id,'5','0',d.ssu_qty) sales_qty,
        decode(pps.UOM_code, 'BN','BG',pps.UOM_code) sales_uom,
        decode(hs.status_id,'5','0',d.ssu_qty) equivalent_qty,
        'UN' equivilent_qty_uom,
        cad.name_1 salesrep_name,
        salesrep.name_1 || ' ' || salesrep.name_3 contact_name,
        salesrep.alias_ss_code salesrep_id,
        cad.mailing_addr_line_1 salesrep_address_1,
        cad.mailing_city salesrep_city,
        cad.mailing_state_code salesrep_state,
        cad.mailing_zip_code salesrep_zip,
        cad.mailing_county salesrep_county,
        decode (h.man_attn_flag, 'Y', 'N', 'Y') Touched_Untouched
        FROM ecg_tran_header h,
        ecg_tran_detail d,
        ecg_tran_party p_sf,
        ecg_tran_party p_st,
        ecg_tran_party p_ds,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        dm_active_grower_dim g,
        dm_active_channel_account_dim cad,
        s_acct_sales_area cgp,
        (select *
        from (select acct_id, system_type_code,
        alias_id, active_flag, rank, begin_date,
        max(begin_date) over (partition by acct_id, rank) max_date
        from s_acct_xref
        where system_type_code='GLN' and active_flag='Y' and rank=1
        )
        where begin_date = max_date
        ) gln_map,
        dm_date_dim dd,
        s_seedco_salesrep salesrep,
        dm_seed_product_dim spd,
        s_prod_package_struct pps,
        dm_date_period_map dpm
        WHERE h.tran_id = d.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_st.tran_id
        AND p_st.party_code = 'ST'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.ship_date = to_char(dd.day_date, 'yyyymmdd')
        AND exists (select 1
        from ecg_tran_header h1, ecg_tran_header_status hs1, ecg_tran_party tp1
        where h1.tran_id = hs1.tran_id
        and h1.tran_id = tp1.tran_id
        and tp1.party_code = 'SF'
        and hs1.status_code = 'SI'
        and hs1.status_id = 3
        and trunc(hs1.row_modify_date) > #startDate#
        and h1.rptd_doc_nbr = h.rptd_doc_nbr
        and tp1.acct_id = p_sf.acct_id)
        AND p_sf.acct_id = cad.acct_id
        AND cad.acct_id = cgp.acct_id
        AND d.prod_id = pps.prod_id
        AND d.prod_id = spd.product_id
        AND hs.status_id = 3
        AND hs.status_code = 'SI'
        AND dd.date_key = dpm.date_key
        AND to_number(LPAD (NVL (h.seedco_sales_rep_code,0),12,'0'))=TO_NUMBER (salesrep.seedco_salesrep_id(+))
        AND p_st.acct_id = g.acct_id
        AND ts.source = 'AGRIMINE'
        AND (RTRIM(g.napd_id) IS NOT NULL
        OR RTRIM(gln_map.alias_id) IS NOT NULL)
        AND g.acct_id = gln_map.acct_id(+)
        AND gln_map.system_type_code(+) = 'GLN'
        AND gln_map.rank(+) = 1
        AND gln_map.active_flag(+) = 'Y'
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 'WINTER CANOLA'
        ELSE 'MARKET YEAR'
        END = dpm.period_type
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 0
        WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) > 8
        THEN 1
        ELSE 0
        END = dpm.curr_period_offset
        )
        group by rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        sales_uom,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched)
    </select>

    <select id="getTotalsDirect" resultMap="dataSummaryTotalsResult" parameterClass="java.util.Map">
        Select Sum (open_last_run) "Total_Daily_Open_Invoices", Sum(open_seed_year) "Total_Open_Invoices"
        from (
        SELECT  count(distinct  h.tran_id) open_last_run ,0 open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        ecg_tran_party p_sf,
        ecg_tran_party p_ds,
        s_acct_sales_area cgp,
        biotech_translation bt
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND p_sf.acct_id = cgp.acct_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
        AND bt.dest_alias_id = #groupCode#
        AND bt.source_alias_type = 'CustGrp'
        AND trunc(hs.row_modify_date) > #startDate#
        AND (ts.source in ('SRX', 'SRXH', 'SRXF', 'SEEDTRAK', 'KEYED' ) OR ts.source  = 'WS-XML' AND p_ds.acct_id != 168618)
        union all
        SELECT  0 open_last_run, count (distinct h.tran_id) open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        ecg_tran_party p_sf,
        ecg_tran_party p_ds,
        dm_date_dim dd,
        s_acct_sales_area cgp,
        biotech_translation bt
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND p_sf.acct_id = cgp.acct_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
        AND bt.dest_alias_id = #groupCode#
        AND bt.source_alias_type = 'CustGrp'
        AND h.row_entry_date between dd.mkt_yr_begin_date and dd.mkt_yr_end_date
        AND dd.day_date = trunc(sysdate)
        AND (ts.source in ('SRX', 'SRXH', 'SRXF', 'SEEDTRAK', 'KEYED' ) OR ts.source  = 'WS-XML' AND p_ds.acct_id != 168618))
    </select>

    <select id="getTotalsXML" resultMap="dataSummaryTotalsResult" parameterClass="java.util.Map">
        Select Sum (open_last_run) "Total_Daily_Open_Invoices", Sum(open_seed_year) "Total_Open_Invoices"
        from (
        (SELECT  count(distinct  h.tran_id) open_last_run ,0 open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_party p_sf,
        ecg_tran_party p_ds,
        ecg_tran_header_status hs,
        s_acct_sales_area cgp,
        biotech_translation bt
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND p_sf.acct_id = cgp.acct_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
        AND bt.dest_alias_id = #groupCode#
        AND bt.source_alias_type = 'CustGrp'
        AND trunc(hs.row_modify_date) > #startDate#
        AND (ts.source = 'XML' AND p_ds.acct_id != 168618)
        union all
        SELECT  count(distinct  h.tran_id) open_last_run ,0 open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_party p_ds,
        ecg_tran_header_status hs
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND trunc(hs.row_modify_date) > #startDate#
        AND (ts.source = 'XML' AND p_ds.acct_id = 168618))
        UNION ALL
        (SELECT  0 open_last_run, count (distinct h.tran_id) open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_party p_sf,
        ecg_tran_party p_ds,
        ecg_tran_header_status hs,
        s_acct_sales_area cgp,
        dm_date_dim dd,
        biotech_translation bt
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND p_sf.acct_id = cgp.acct_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
        AND bt.dest_alias_id = #groupCode#
        AND bt.source_alias_type = 'CustGrp'
        AND h.row_entry_date between dd.mkt_yr_begin_date and dd.mkt_yr_end_date
        AND dd.day_date = trunc(sysdate)
        AND (ts.source = 'XML' AND p_ds.acct_id != 168618)
        union all
        SELECT  0 open_last_run, count (distinct h.tran_id) open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_party p_ds,
        dm_date_dim dd,
        ecg_tran_header_status hs
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND h.row_entry_date between dd.mkt_yr_begin_date and dd.mkt_yr_end_date
        AND dd.day_date = trunc(sysdate)
        AND (ts.source = 'XML' AND p_ds.acct_id = 168618)))
    </select>

    <select id="getTotalsAgrimine" resultMap="dataSummaryTotalsResult" parameterClass="java.util.Map">
        Select Sum (open_last_run) "Total_Daily_Open_Invoices", Sum(open_seed_year) "Total_Open_Invoices"
        from (
        SELECT  count(distinct  h.tran_id) open_last_run ,0 open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_header_status hs
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND trunc(hs.row_modify_date) > #startDate#
        AND ts.source = 'AGRIMINE'
        union all
        SELECT  0 open_last_run, count (distinct h.tran_id) open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        dm_date_dim dd
        WHERE
        h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND h.row_entry_date between dd.mkt_yr_begin_date and dd.mkt_yr_end_date
        AND dd.day_date = trunc(sysdate)
        AND ts.source = 'AGRIMINE')
    </select>
    <!--CUSTPLT-632 - Introducing new Partner Agdata-->
    <select id="getDataSummaryAgData" resultMap="dataSummaryResult" parameterClass="java.util.Map">
        SELECT count( distinct rptd_doc_nbr) "Total_Invoices",
        count (detail_seq_nbr) "Total_Line_Items",
        count(distinct dealer_acct_id) "Total_Dealers",
        count (distinct grower_acct_id) "Total_Growers",
        sum(equivalent_qty) "Total_Equivalent_Qty"
        from (
        select rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        SUM (sales_qty) sales_qty,
        sales_uom,
        SUM (equivalent_qty) equivalent_qty,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched
        FROM (
        SELECT distinct h.rptd_doc_nbr,
        h.tran_id,
        d.detail_seq_nbr,
        'NS' sales_order_type_code,
        ts.source data_source,
        dd.day_date invc_date,
        substr(dd.mkt_yr, 1,4)   fiscal_year,
        cad.name_1 dealer_name,
        cad.ic_code dealer_ebid,
        cad.acct_id  dealer_acct_id,
        cad.shipping_addr_line_1 dealer_mailing_address,
        cad.shipping_city dealer_mailing_city,
        cad.shipping_state_code dealer_mailing_state,
        cad.shipping_zip_code dealer_mailing_zip_code,
        cad.shipping_county dealer_mailing_county,
        g.name_1 grower_name,
        gln_map.alias_id grower_gln,
        g.napd_id grower_napd_id,
        g.acct_id grower_acct_id,
        g.primary_contact_full_name grower_contact_name,
        g.mailing_addr_line_1 grower_mailing_address,
        g.mailing_city grower_mailing_city,
        g.mailing_state_code grower_mailing_state,
        g.mailing_zip_code grower_mailing_zip_code,
        g.mailing_county grower_mailing_county,
        spd.upc_code upc_code,
        spd.legal_descr_1 product_name,
        pps.upc_scc_code  gtin,
        <!--WO0000002039189 - Cancelled Transactions-->
        <!--d.ssu_qty     sales_qty,-->
        decode(hs.status_id,'5','0',d.ssu_qty) sales_qty,
        decode(pps.UOM_code, 'BN','BG',pps.UOM_code) sales_uom,
        decode(hs.status_id,'5','0',d.ssu_qty) equivalent_qty,
        'UN' equivilent_qty_uom,
        cad.name_1 salesrep_name,
        salesrep.name_1 || ' ' || salesrep.name_3 contact_name,
        salesrep.alias_ss_code salesrep_id,
        cad.mailing_addr_line_1 salesrep_address_1,
        cad.mailing_city salesrep_city,
        cad.mailing_state_code salesrep_state,
        cad.mailing_zip_code salesrep_zip,
        cad.mailing_county salesrep_county,
        decode (h.man_attn_flag, 'Y', 'N', 'Y') Touched_Untouched
        FROM ecg_tran_header h,
        ecg_tran_detail d,
        ecg_tran_party p_sf,
        ecg_tran_party p_st,
        ecg_tran_party p_ds,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        dm_active_grower_dim g,
        dm_active_channel_account_dim cad,
        s_acct_sales_area cgp,
        (select *
        from (select acct_id, system_type_code,
        alias_id, active_flag, rank, begin_date,
        max(begin_date) over (partition by acct_id, rank) max_date
        from s_acct_xref
        where system_type_code='GLN' and active_flag='Y' and rank=1
        )
        where begin_date = max_date
        )gln_map,
        dm_date_dim dd,
        s_seedco_salesrep salesrep,
        dm_seed_product_dim spd,
        s_prod_package_struct pps,
        dm_date_period_map dpm,
        biotech_translation bt
        WHERE h.tran_id = d.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_st.tran_id
        AND p_st.party_code = 'ST'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.ship_date = to_char(dd.day_date, 'yyyymmdd')
        AND exists (select 1
        from ecg_tran_header h1, ecg_tran_header_status hs1, ecg_tran_party tp1
        where h1.tran_id = hs1.tran_id
        and h1.tran_id = tp1.tran_id
        and tp1.party_code = 'SF'
        and hs1.status_code = 'SI'
        and hs1.status_id = 3
        and trunc(hs1.row_modify_date) > #startDate#
        and h1.rptd_doc_nbr = h.rptd_doc_nbr
        and tp1.acct_id = p_sf.acct_id)
        AND p_sf.acct_id = cad.acct_id
        AND cad.acct_id = cgp.acct_id
        AND d.prod_id = pps.prod_id
        AND d.prod_id = spd.product_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
       <!-- AND bt.dest_alias_id = #groupCode# -->
        AND bt.source_alias_type = 'CustGrp'
        AND hs.status_id = 3
        AND spd.OWNED_LICENSED_CODE = 'OWNED'
        AND hs.status_code = 'SI'
        AND dd.date_key = dpm.date_key
        AND to_number(LPAD (NVL (h.seedco_sales_rep_code,0),12,'0'))=
        TO_NUMBER (salesrep.seedco_salesrep_id(+))
        AND NVL (cgp.mfd_flag, 'N') != 'X'
        AND cgp.distribution_channel_code = '90'
        AND cgp.division_code = '17'
        AND cgp.sales_org_code = 'US20'
        AND p_st.acct_id = g.acct_id
        AND (ts.source in ('SRX', 'SRXH', 'SRXF', 'SEEDTRAK', 'KEYED' ) OR ts.source  = 'WS-XML' <!--AND p_ds.acct_id != 168618-->)
        AND (RTRIM(g.napd_id) IS NOT NULL
        OR RTRIM(gln_map.alias_id) IS NOT NULL)
        AND g.acct_id = gln_map.acct_id(+)
        AND gln_map.system_type_code(+) = 'GLN'
        AND gln_map.rank(+) = 1
        AND gln_map.active_flag(+) = 'Y'
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 'WINTER CANOLA'
        ELSE 'MARKET YEAR'
        END = dpm.period_type
        AND CASE
        WHEN spd.specie_code = 'L'
        AND SUBSTR (dpm.period_descr, 1, 4) >= '2006'
        AND SUBSTR (spd.trait_code, 1, 1) = 'W'
        THEN 0
        WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) > 8
        THEN 1
        ELSE 0
        END = dpm.curr_period_offset
        )
        group by rptd_doc_nbr,
        detail_seq_nbr,
        sales_order_type_code,
        data_source,
        invc_date,
        fiscal_year,
        dealer_name,
        dealer_ebid,
        dealer_acct_id,
        dealer_mailing_address,
        dealer_mailing_city,
        dealer_mailing_state,
        dealer_mailing_zip_code,
        dealer_mailing_county,
        grower_name,
        grower_gln,
        grower_napd_id,
        grower_acct_id,
        grower_contact_name,
        grower_mailing_address,
        grower_mailing_city,
        grower_mailing_state,
        grower_mailing_zip_code,
        grower_mailing_county,
        upc_code,
        product_name,
        gtin,
        sales_uom,
        equivilent_qty_uom,
        salesrep_name,
        contact_name,
        salesrep_id,
        salesrep_address_1,
        salesrep_city,
        salesrep_state,
        salesrep_zip,
        salesrep_county,
        Touched_Untouched)
    </select>

    <!--CUSTPLT-632 - Introducing new Partner Agdata-->
    <select id="getTotalsAgdata" resultMap="dataSummaryTotalsResult" parameterClass="java.util.Map">
        Select Sum (open_last_run) "Total_Daily_Open_Invoices", Sum(open_seed_year) "Total_Open_Invoices"
        from (
        SELECT  count(distinct  h.tran_id) open_last_run ,0 open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        ecg_tran_party p_sf,
        ecg_tran_party p_ds,
        s_acct_sales_area cgp,
        biotech_translation bt
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND p_sf.acct_id = cgp.acct_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
       <!-- AND bt.dest_alias_id = #groupCode# -->
        AND bt.source_alias_type = 'CustGrp'
        AND trunc(hs.row_modify_date) > #startDate#
        AND (ts.source in ('SRX', 'SRXH', 'SRXF', 'SEEDTRAK', 'KEYED' ) OR ts.source  = 'WS-XML' <!--AND p_ds.acct_id != 168618-->)
        union all
        SELECT  0 open_last_run, count (distinct h.tran_id) open_seed_year
        FROM ecg_tran_header h,
        ecg_tracking_source ts,
        ecg_tran_header_status hs,
        ecg_tran_party p_sf,
        ecg_tran_party p_ds,
        dm_date_dim dd,
        s_acct_sales_area cgp,
        biotech_translation bt
        WHERE h.tracking_id = ts.tracking_id
        AND h.tran_id = hs.tran_id
        AND h.tran_id = p_sf.tran_id
        AND p_sf.party_code = 'SF'
        AND h.tran_id = p_ds.tran_id
        AND p_ds.party_code = 'DS'
        AND hs.status_id = 2
        AND hs.status_code = 'SI'
        AND p_sf.acct_id = cgp.acct_id
        AND cgp.customer_grp_code = bt.dest_alias_id
        AND bt.alias_program = 'CDW749RT'
       <!-- AND bt.dest_alias_id = #groupCode# -->
        AND bt.source_alias_type = 'CustGrp'
        AND h.row_entry_date between dd.mkt_yr_begin_date and dd.mkt_yr_end_date
        AND dd.day_date = trunc(sysdate)
        AND (ts.source in ('SRX', 'SRXH', 'SRXF', 'SEEDTRAK', 'KEYED' ) OR ts.source  = 'WS-XML' <!--AND p_ds.acct_id != 168618-->))
    </select>

</sqlMap>