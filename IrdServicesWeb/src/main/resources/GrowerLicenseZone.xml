<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="AgreementStatus">
    <typeAlias alias="agreementStatus"
               type="com.monsanto.irdsoapservices.agreementstatus.domain.AgreementStatusInfo" />

    <resultMap id="agreementStatusResult" class="agreementStatus">
        <result property="aliasId" column="ALIAS_ID" />
        <result property="systemTypeCode" column="SYSTEM_TYPE_CODE" />
        <result property="acctId" column="ACCT_ID" />
        <result property="partnerName" column="ACCT_NAME" />
        <result property="contactName" column="CONTACT_NAME" />
        <result property="speciesCode" column="SPECIES_CODE" />
        <result property="tempAgreement.agreementName" column="AGREEMENT_NAME" />
        <result property="tempAgreement.agreementStatus" column="LICENSE_STATUS" />
        <result property="tempAgreement.licenseNumber" column="TECH_LICENSE_NUMBER" />
        <result property="tempAgreement.tempZone.zoneId" column="ZONE_CODE" />
        <result property="tempAgreement.tempZone.zoneType" column="ZONE_TYPE" />
        <result property="tempAgreement.tempZone.zoneName" column="ZONE_DESCR" />
        <result property="tempAgreement.tempZone.cropCode" column="SPECIES_CODE" />
        <result property="tempAgreement.tempZone.cropName" column="SPECIES_DESCR" />
    </resultMap>

    <sql id="baseSelectFrom">
        WITH ZONE AS
        (SELECT  DISTINCT
        atz.acct_id,
        z.descr as zone_descr,
        atz.mkt_year_code,
        atz.zone_code,
        atz.zone_struct_code,
        tzs.species_code,
        zs.descr zone_struct_descr,
        ss.descr species_descr
        FROM agshare.acct_to_zone_dnml atz,
        agshare.zone_mv z,
        agshare.trait_to_zone_struct_mv tzs,
        agshare.zone_struct_mv zs,
        agshare.seed_species_mv ss
        WHERE     atz.zone_struct_code = tzs.zone_struct_code
        AND atz.zone_struct_code = z.zone_struct_code
        AND z.zone_code = atz.zone_code
        AND tzs.usage_code = 'PR'
        AND atz.mkt_year_code = tzs.mkt_year_code
        AND atz.zone_struct_code = zs.zone_struct_code
        AND tzs.species_code = ss.species_code
        AND SUBSTR(TZS.MKT_YEAR_CODE,1,4) = substr( nvl(#years[0]#,(SELECT character_value FROM AGSHARE.IRD_PARAMETER_MV WHERE ird_parameter_code = 'AZR_MKT_YR')),1,4))
        SELECT        DISTINCT
        xf.alias_id,
        xf.system_type_code,
        G.acct_id AS ACCT_ID,
        G.tech_license_number,
        G.acct_name,
        acm.mailing_state_code,
        ZONE.species_code,
        ZONE.species_descr,
        ZONE.zone_descr,
        ZONE.zone_code,
        ZONE.zone_struct_descr ZONE_TYPE,
        DECODE(ZONE.species_code, 'T', 'MTA1', 'MTA2')  AGREEMENT_NAME,
        CASE license_status
        WHEN 'PERM INJ' THEN 'Unauthorized'
        WHEN 'NOT AUTH' THEN 'Unauthorized'
        WHEN 'UNLICENSED' THEN 'Unlicensed'
        WHEN 'LICENSED' THEN 'Licensed'
        WHEN 'LICENSED EXCEPT COTTON' THEN 'Licensed EXCEPT Cotton'
        END
        LICENSE_STATUS,
        ACM.CONTACT_FIRST_NAME ||' ' ||ACM.CONTACT_LAST_NAME AS CONTACT_NAME
        FROM AGSHARE.RR_GROWERS_MV  G,
        AGSHARE.acct_contact_mailing_dnml acm,
        AGSHARE.acct_xref_mv xf,
        ZONE
        WHERE     G.acct_id = ZONE.acct_id(+)
        AND G.acct_id = acm.acct_id(+)
        AND acm.primary_contact_flag(+) = 'Y'
        AND G.acct_id = xf.acct_id
        AND xf.system_type_code IN ('GLN', 'SAP', 'IC')
        AND xf.active_flag = 'Y'
        AND ZONE.mkt_year_code IS NOT NULL
    </sql>

    <select id="getAgreementStatus" resultMap="agreementStatusResult" parameterClass="java.util.Map">
        <include refid="baseSelectFrom"/>
        AND   xf.system_type_code IN
        <iterate property="SystemTypeCodes" open="(" close=")" conjunction=",">
            #SystemTypeCodes[]#
        </iterate>
        AND ( xf.alias_id IN
        <iterate property="Set1" open="(" close=")" conjunction=",">
            #Set1[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set2" open="(" close=")" conjunction=",">
            #Set2[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set3" open="(" close=")" conjunction=",">
            #Set3[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set4" open="(" close=")" conjunction=",">
            #Set4[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set5" open="(" close=")" conjunction=",">
            #Set5[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set6" open="(" close=")" conjunction=",">
            #Set6[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set7" open="(" close=")" conjunction=",">
            #Set7[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set8" open="(" close=")" conjunction=",">
            #Set8[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set9" open="(" close=")" conjunction=",">
            #Set9[]#
        </iterate>
        OR xf.alias_id IN
        <iterate property="Set10" open="(" close=")" conjunction=",">
            #Set10[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS1" open="(" close=")" conjunction=",">
            #SetABS1[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS2" open="(" close=")" conjunction=",">
            #SetABS2[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS3" open="(" close=")" conjunction=",">
            #SetABS3[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS4" open="(" close=")" conjunction=",">
            #SetABS4[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS5" open="(" close=")" conjunction=",">
            #SetABS5[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS6" open="(" close=")" conjunction=",">
            #SetABS6[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS7" open="(" close=")" conjunction=",">
            #SetABS7[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS8" open="(" close=")" conjunction=",">
            #SetABS8[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS9" open="(" close=")" conjunction=",">
            #SetABS9[]#
        </iterate>
        OR G.acct_id IN
        <iterate property="SetABS10" open="(" close=")" conjunction=",">
            #SetABS10[]#
        </iterate>
        )
        ORDER BY AGREEMENT_NAME,G.acct_id,SPECIES_CODE,SYSTEM_TYPE_CODE
    </select>

</sqlMap>




